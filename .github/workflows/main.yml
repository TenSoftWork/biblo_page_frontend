name: CI/CD for my-frontend
on:
  push:
    branches: [ "main" ]
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1) 체크아웃
      - name: Check out code
        uses: actions/checkout@v2
      
      # 2) Docker 로그인
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      
      # 3) Docker 이미지 빌드 및 푸시
      - name: Build and push
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-frontend:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-frontend:latest
      
      # 4) SSH를 통한 Jenkins 작업 트리거
      - name: Trigger Jenkins via SSH
        uses: appleboy/ssh-action@master
        with:
          host: 112.219.163.139
          port: 1398
          username: kjm
          key: ${{ secrets.JENKINS_SSH_PRIVATE_KEY }}
          script: |
            # 먼저 Jenkins가 실행 중인지 확인
            curl -s http://localhost:8080/ > /dev/null
            
            # Jenkins 크럼브(CSRF 토큰) 가져오기
            CRUMB=$(curl -s 'http://localhost:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)' -u tsw_jenkins:11255b2c8b4064d1325ba36522e5d01c6b)
            
            # Jenkins 작업 경로 확인
            if curl -s -f http://localhost:8080/job/biblo_homepage_FE/ -u tsw_jenkins:11255b2c8b4064d1325ba36522e5d01c6b > /dev/null; then
              echo "Jenkins job exists, triggering build..."
              # 작업 트리거
              curl -X POST "http://localhost:8080/job/biblo_homepage_FE/build?token=11255b2c8b4064d1325ba36522e5d01c6b" -H "$CRUMB" -u tsw_jenkins:11255b2c8b4064d1325ba36522e5d01c6b
            else
              echo "Jenkins job path not found, listing available jobs:"
              curl -s http://localhost:8080/api/json?tree=jobs[name] -u tsw_jenkins:11255b2c8b4064d1325ba36522e5d01c6b | grep -o '"name":"[^"]*"'
            fi
